"""Initial

Revision ID: d9d563b83813
Revises: 
Create Date: 2025-05-24 21:26:02.671676

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd9d563b83813'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('financial_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'CLOSE', name='financialgroupstatusesenum'), server_default=sa.text("'CLOSE'"), nullable=False),
    sa.Column('sum', sa.Numeric(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_financial_groups_id'), 'financial_groups', ['id'], unique=False)
    op.create_table('transaction_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('desription', sa.String(), nullable=True),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_transaction_categories_id'), 'transaction_categories', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('bank_cards',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('card_number', sa.String(), nullable=False),
    sa.Column('card_name', sa.String(), nullable=True),
    sa.Column('card_description', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('card_number')
    )
    op.create_index(op.f('ix_bank_cards_id'), 'bank_cards', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('trans_datetime', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('trans_sum', sa.Numeric(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('target', sa.Integer(), nullable=True),
    sa.Column('target_type', sa.Enum('GOAL', 'CREDIT', name='financialgrouptypesenum'), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('bank_card_id', sa.Integer(), nullable=False),
    sa.Column('financial_group_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bank_card_id'], ['bank_cards.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['transaction_categories.id'], ),
    sa.ForeignKeyConstraint(['financial_group_id'], ['financial_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_bank_cards_id'), table_name='bank_cards')
    op.drop_table('bank_cards')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_transaction_categories_id'), table_name='transaction_categories')
    op.drop_table('transaction_categories')
    op.drop_index(op.f('ix_financial_groups_id'), table_name='financial_groups')
    op.drop_table('financial_groups')
    # ### end Alembic commands ###
    
    # enums dropping
    op.execute('DROP TYPE IF EXISTS financialgroupstatusesenum')
    op.execute('DROP TYPE IF EXISTS financialgrouptypesenum')
